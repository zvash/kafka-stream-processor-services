<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <modules>
        <module>twitter-to-kafka-service</module>
        <module>app-config-data</module>
        <module>kafka</module>
        <module>common-config</module>
        <module>config-server</module>
        <module>kafka-to-elastic-service</module>
        <module>elastic</module>
        <module>common-util</module>
        <module>elastic-query-service</module>
    </modules>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.0.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>xyz.gouril.microservices.demo</groupId>
    <artifactId>microservices-demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>microservices-demo</name>
    <description>Microservices demo project for Spring Boot</description>
    <packaging>pom</packaging>
    <properties>
        <java.version>17</java.version>
        <spring-boot.version>3.0.3</spring-boot.version>
        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
        <twitter4j.version>4.0.7</twitter4j.version>
        <lombok.version>1.18.26</lombok.version>
        <avro.version>1.11.1</avro.version>
        <spring-retry.version>2.0.0</spring-retry.version>
        <kafka-avro-serializer.version>7.3.2</kafka-avro-serializer.version>
        <spring-cloud.version>4.0.1</spring-cloud.version>
        <spring-cloud-dependencies.version>2022.0.1</spring-cloud-dependencies.version>
        <elasticsearch.version>7.17.9</elasticsearch.version>
        <elasticsearch-rest-high-level-client.version>7.17.9</elasticsearch-rest-high-level-client.version>
    </properties>

    <repositories>
        <repository>
            <id>confluence</id>
            <url>https://packages.confluent.io/maven/</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <!--LOCAL-->
            <dependency>
                <groupId>xyz.gouril.microservices.demo</groupId>
                <artifactId>common-util</artifactId>
                <version>${version}</version>
            </dependency>

            <dependency>
                <groupId>xyz.gouril.microservices.demo</groupId>
                <artifactId>app-config-data</artifactId>
                <version>${version}</version>
            </dependency>

            <dependency>
                <groupId>xyz.gouril.microservices.demo</groupId>
                <artifactId>common-config</artifactId>
                <version>${version}</version>
            </dependency>

            <dependency>
                <groupId>xyz.gouril.microservices.demo</groupId>
                <artifactId>kafka-model</artifactId>
                <version>${version}</version>
            </dependency>

            <dependency>
                <groupId>xyz.gouril.microservices.demo</groupId>
                <artifactId>kafka-admin</artifactId>
                <version>${version}</version>
            </dependency>
            <dependency>
                <groupId>xyz.gouril.microservices.demo</groupId>
                <artifactId>elastic-model</artifactId>
                <version>${version}</version>
            </dependency>
            <dependency>
                <groupId>xyz.gouril.microservices.demo</groupId>
                <artifactId>elastic-index-client</artifactId>
                <version>${version}</version>
            </dependency>
            <dependency>
                <groupId>xyz.gouril.microservices.demo</groupId>
                <artifactId>elastic-config</artifactId>
                <version>${version}</version>
            </dependency>


            <dependency>
                <groupId>xyz.gouril.microservices.demo</groupId>
                <artifactId>kafka-producer</artifactId>
                <version>${version}</version>
            </dependency>
            <dependency>
                <groupId>xyz.gouril.microservices.demo</groupId>
                <artifactId>kafka-consumer</artifactId>
                <version>${version}</version>
            </dependency>

            <dependency>
                <groupId>xyz.gouril.microservices.demo</groupId>
                <artifactId>elastic-query-client</artifactId>
                <version>${version}</version>
            </dependency>


            <!--REMOTE-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.twitter4j</groupId>
                <artifactId>twitter4j-stream</artifactId>
                <version>${twitter4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
                <version>${spring-boot.version}</version>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-hateoas</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-validation</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro</artifactId>
                <version>${avro.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.retry</groupId>
                <artifactId>spring-retry</artifactId>
                <version>${spring-retry.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-webflux</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/io.confluent/kafka-avro-serializer -->
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-avro-serializer</artifactId>
                <version>${kafka-avro-serializer.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.swagger</groupId>
                        <artifactId>swagger-annotations</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.swagger</groupId>
                        <artifactId>swagger-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-config-server</artifactId>
                <version>${spring-cloud.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-config -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-config</artifactId>
                <version>${spring-cloud.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-bootstrap</artifactId>
                <version>${spring-cloud.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-elasticsearch -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.elasticsearch/elasticsearch -->
            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>

            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-high-level-client</artifactId>
                <version>${elasticsearch-rest-high-level-client.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>


        </dependencies>
    </dependencyManagement>

    <build>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <release>17</release>
                </configuration>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
