2023-03-05 01:03:37 [main] WARN  o.s.c.a.AnnotationTypeMapping - Support for convention-based annotation attribute overrides is deprecated and will be removed in Spring Framework 6.1. Please annotate the following attributes in @org.springframework.retry.annotation.EnableRetry with appropriate @AliasFor declarations: [proxyTargetClass]
2023-03-05 01:03:38 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2023-03-05 01:03:40 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=twitter-to-kafka-service,config-client, profiles=[twitter_to_kafka], label=null, version=9445bacdb9a9930fa27bec3e65db0c5bc83294d0, state=null
2023-03-05 01:03:40 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/zvash/spring-cloud-config-server-repository/config-client-twitter_to_kafka.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/zvash/spring-cloud-config-server-repository/config-client.yml'}]
2023-03-05 01:03:40 [main] INFO  x.g.m.d.t.t.k.s.TwitterToKafkaServiceApplication - The following 1 profile is active: "twitter_to_kafka"
2023-03-05 01:03:41 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=fa46abb6-73a5-31ca-a37c-6b0fcfa290d7
2023-03-05 01:03:41 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-05 01:03:41 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.3.2
2023-03-05 01:03:41 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: b66af662e61082cb
2023-03-05 01:03:41 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1677965621725
2023-03-05 01:03:42 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2023-03-05 01:03:42 [main] INFO  x.g.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 6.321 seconds (process running for 7.243)
2023-03-05 01:03:42 [main] INFO  x.g.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Application started!
2023-03-05 01:03:42 [main] INFO  x.g.m.d.k.a.client.KafkaAdminClient - Creating 1 topic(s), attempt 0
2023-03-05 01:03:42 [main] INFO  x.g.m.d.k.a.client.KafkaAdminClient - Reading kafka topic [twitter-topic], attempt 0
2023-03-05 01:03:43 [main] INFO  x.g.m.d.t.t.k.s.i.i.KafkaStreamInitializer - Topics with name twitter-topic is ready for operations.
2023-03-05 01:03:43 [main] INFO  x.g.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - Start to mock twitter stream for keywords: [Java, Microservices, Spring, Kafka, Elasticsearch]
2023-03-05 01:03:43 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text euismod feugiat commodo odio commodo Elasticsearch quis tempor odio in sending to kafka topic twitter-topic
2023-03-05 01:03:43 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 8099456024880533940, "id": 5495784835477993878, "text": "euismod feugiat commodo odio commodo Elasticsearch quis tempor odio in", "createdAt": 1677965623000}' to topic = 'twitter-topic'
2023-03-05 01:03:43 [pool-3-thread-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2023-03-05 01:03:43 [pool-3-thread-1] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.remove.java.properties = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	use.latest.version = false
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2023-03-05 01:03:43 [pool-3-thread-1] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-03-05 01:03:43 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.3.2
2023-03-05 01:03:43 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: b66af662e61082cb
2023-03-05 01:03:43 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1677965623496
2023-03-05 01:03:43 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: QGDYypu5SSGtA9Bc36Rjow
2023-03-05 01:03:43 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 18001 with epoch 0
2023-03-05 01:03:53 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tempor dictum at odio arcu Microservices in feugiat feugiat sending to kafka topic twitter-topic
2023-03-05 01:03:53 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 2758790817059377961, "id": 3592620984222252220, "text": "tempor dictum at odio arcu Microservices in feugiat feugiat", "createdAt": 1677965633000}' to topic = 'twitter-topic'
2023-03-05 01:04:03 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text lacinia non metus ante feugiat lacinia dictum non Elasticsearch in quis in sed metus quis a sending to kafka topic twitter-topic
2023-03-05 01:04:03 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 1545795050981664637, "id": 3890386645471022912, "text": "lacinia non metus ante feugiat lacinia dictum non Elasticsearch in quis in sed metus quis a", "createdAt": 1677965643000}' to topic = 'twitter-topic'
2023-03-05 01:04:13 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text a a arcu lacinia Java tempor lacinia at sending to kafka topic twitter-topic
2023-03-05 01:04:13 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 4509331635203240312, "id": 87634705301451344, "text": "a a arcu lacinia Java tempor lacinia at", "createdAt": 1677965653000}' to topic = 'twitter-topic'
2023-03-05 01:04:23 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text vestibulum commodo feugiat dictum vestibulum quis Java tempor dictum euismod arcu in sending to kafka topic twitter-topic
2023-03-05 01:04:23 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 1474532527419580824, "id": 614087527138529891, "text": "vestibulum commodo feugiat dictum vestibulum quis Java tempor dictum euismod arcu in", "createdAt": 1677965663000}' to topic = 'twitter-topic'
2023-03-05 01:04:33 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text odio lacinia euismod lacinia lacinia quis Java tempor tempor feugiat quis lacinia sending to kafka topic twitter-topic
2023-03-05 01:04:33 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 1176044313006070099, "id": 6875476207523078308, "text": "odio lacinia euismod lacinia lacinia quis Java tempor tempor feugiat quis lacinia", "createdAt": 1677965673000}' to topic = 'twitter-topic'
2023-03-05 01:04:43 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text feugiat dictum commodo non lacinia Spring commodo a quis tempor sending to kafka topic twitter-topic
2023-03-05 01:04:43 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 7499375283491157021, "id": 7610788393952226708, "text": "feugiat dictum commodo non lacinia Spring commodo a quis tempor", "createdAt": 1677965683000}' to topic = 'twitter-topic'
2023-03-05 01:04:53 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text sed in commodo Microservices euismod quis sending to kafka topic twitter-topic
2023-03-05 01:04:53 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 1777958563869190103, "id": 1373897050590816637, "text": "sed in commodo Microservices euismod quis", "createdAt": 1677965693000}' to topic = 'twitter-topic'
2023-03-05 01:05:03 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text at arcu a vestibulum Spring at quis odio sending to kafka topic twitter-topic
2023-03-05 01:05:03 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 3866226238068561967, "id": 2398256544951101362, "text": "at arcu a vestibulum Spring at quis odio", "createdAt": 1677965703000}' to topic = 'twitter-topic'
2023-03-05 01:05:13 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text lacinia tempor in tempor Spring ante commodo sending to kafka topic twitter-topic
2023-03-05 01:05:13 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 6108994985717859934, "id": 4137863017365306659, "text": "lacinia tempor in tempor Spring ante commodo", "createdAt": 1677965713000}' to topic = 'twitter-topic'
2023-03-05 01:05:23 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tempor tempor non Microservices tempor at sending to kafka topic twitter-topic
2023-03-05 01:05:23 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 5274735507188144991, "id": 3164179006713357894, "text": "tempor tempor non Microservices tempor at", "createdAt": 1677965723000}' to topic = 'twitter-topic'
2023-03-05 01:05:33 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text non lacinia dictum at Microservices dictum odio sending to kafka topic twitter-topic
2023-03-05 01:05:33 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 8223474982595933477, "id": 3825212266523989814, "text": "non lacinia dictum at Microservices dictum odio", "createdAt": 1677965733000}' to topic = 'twitter-topic'
2023-03-05 01:05:43 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text metus dictum euismod odio at Spring ante dictum lacus sending to kafka topic twitter-topic
2023-03-05 01:05:44 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 2565275730719590168, "id": 3982339835367543173, "text": "metus dictum euismod odio at Spring ante dictum lacus", "createdAt": 1677965743000}' to topic = 'twitter-topic'
2023-03-05 01:05:54 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text in at sed commodo commodo at at Kafka feugiat lacus vestibulum ullamcorper at euismod sending to kafka topic twitter-topic
2023-03-05 01:05:54 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 1578873374291930560, "id": 7902511765995104316, "text": "in at sed commodo commodo at at Kafka feugiat lacus vestibulum ullamcorper at euismod", "createdAt": 1677965754000}' to topic = 'twitter-topic'
2023-03-05 01:06:04 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text odio a lacus in at vestibulum metus a Elasticsearch lacus quis metus at metus commodo dictum sending to kafka topic twitter-topic
2023-03-05 01:06:04 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 2707026822302084717, "id": 4337195950601114161, "text": "odio a lacus in at vestibulum metus a Elasticsearch lacus quis metus at metus commodo dictum", "createdAt": 1677965764000}' to topic = 'twitter-topic'
2023-03-05 01:06:14 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text lacinia tempor quis euismod ullamcorper Microservices ullamcorper sed euismod non sending to kafka topic twitter-topic
2023-03-05 01:06:14 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 2252747643213791297, "id": 5175625491227260829, "text": "lacinia tempor quis euismod ullamcorper Microservices ullamcorper sed euismod non", "createdAt": 1677965774000}' to topic = 'twitter-topic'
2023-03-05 01:06:24 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text in lacinia in lacus at euismod Kafka lacus odio arcu vestibulum sending to kafka topic twitter-topic
2023-03-05 01:06:24 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 1126650862564482270, "id": 8090383848853786770, "text": "in lacinia in lacus at euismod Kafka lacus odio arcu vestibulum", "createdAt": 1677965784000}' to topic = 'twitter-topic'
2023-03-05 01:06:34 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ante at at feugiat arcu tempor Spring ullamcorper metus a metus odio sending to kafka topic twitter-topic
2023-03-05 01:06:34 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 3686530078498206777, "id": 6784571582539863, "text": "ante at at feugiat arcu tempor Spring ullamcorper metus a metus odio", "createdAt": 1677965794000}' to topic = 'twitter-topic'
2023-03-05 01:06:44 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text sed dictum ante at tempor vestibulum euismod Microservices euismod commodo vestibulum commodo non quis sending to kafka topic twitter-topic
2023-03-05 01:06:44 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 2390387627212068803, "id": 2410936391328564480, "text": "sed dictum ante at tempor vestibulum euismod Microservices euismod commodo vestibulum commodo non quis", "createdAt": 1677965804000}' to topic = 'twitter-topic'
2023-03-05 01:06:54 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text at quis at lacinia arcu vestibulum Java at at quis euismod sending to kafka topic twitter-topic
2023-03-05 01:06:54 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 814940664901905672, "id": 5447959006425224394, "text": "at quis at lacinia arcu vestibulum Java at at quis euismod", "createdAt": 1677965814000}' to topic = 'twitter-topic'
2023-03-05 01:07:04 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text commodo tempor at sed ante lacus Elasticsearch metus quis lacinia euismod lacinia sending to kafka topic twitter-topic
2023-03-05 01:07:04 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 1159592674485471143, "id": 1897413400207982822, "text": "commodo tempor at sed ante lacus Elasticsearch metus quis lacinia euismod lacinia", "createdAt": 1677965824000}' to topic = 'twitter-topic'
2023-03-05 01:07:14 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text euismod in sed non Microservices euismod euismod sending to kafka topic twitter-topic
2023-03-05 01:07:14 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 4769554266144793181, "id": 692309112506038394, "text": "euismod in sed non Microservices euismod euismod", "createdAt": 1677965834000}' to topic = 'twitter-topic'
2023-03-05 01:07:24 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text vestibulum metus feugiat in ullamcorper feugiat Java quis lacus sed metus sending to kafka topic twitter-topic
2023-03-05 01:07:24 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 1855411458224136799, "id": 6205737421989407700, "text": "vestibulum metus feugiat in ullamcorper feugiat Java quis lacus sed metus", "createdAt": 1677965844000}' to topic = 'twitter-topic'
2023-03-05 01:07:34 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text feugiat a ante vestibulum dictum lacus Microservices vestibulum tempor at feugiat sending to kafka topic twitter-topic
2023-03-05 01:07:34 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 1853208064617808615, "id": 9082355363050504438, "text": "feugiat a ante vestibulum dictum lacus Microservices vestibulum tempor at feugiat", "createdAt": 1677965854000}' to topic = 'twitter-topic'
2023-03-05 01:07:44 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dictum lacinia non lacinia vestibulum quis lacus Kafka sed a euismod lacus at sending to kafka topic twitter-topic
2023-03-05 01:07:44 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 1322302628287582096, "id": 2650019739255102283, "text": "dictum lacinia non lacinia vestibulum quis lacus Kafka sed a euismod lacus at", "createdAt": 1677965864000}' to topic = 'twitter-topic'
2023-03-05 01:07:54 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text at vestibulum metus dictum odio lacinia Spring sed feugiat odio lacinia sending to kafka topic twitter-topic
2023-03-05 01:07:54 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 2101703138573970443, "id": 7214623690493048654, "text": "at vestibulum metus dictum odio lacinia Spring sed feugiat odio lacinia", "createdAt": 1677965874000}' to topic = 'twitter-topic'
2023-03-05 01:08:04 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text euismod vestibulum arcu euismod Microservices euismod euismod tempor sending to kafka topic twitter-topic
2023-03-05 01:08:04 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 8288009855443823819, "id": 1210277040591736045, "text": "euismod vestibulum arcu euismod Microservices euismod euismod tempor", "createdAt": 1677965884000}' to topic = 'twitter-topic'
2023-03-05 01:08:14 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dictum at tempor commodo tempor at Microservices at at commodo in tempor sending to kafka topic twitter-topic
2023-03-05 01:08:14 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 7000347568986222728, "id": 755325033346557377, "text": "dictum at tempor commodo tempor at Microservices at at commodo in tempor", "createdAt": 1677965894000}' to topic = 'twitter-topic'
2023-03-05 01:08:24 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text metus commodo a dictum Kafka at euismod lacus sending to kafka topic twitter-topic
2023-03-05 01:08:24 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 1629858135367822071, "id": 5625233511171636690, "text": "metus commodo a dictum Kafka at euismod lacus", "createdAt": 1677965904000}' to topic = 'twitter-topic'
2023-03-05 01:08:34 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ullamcorper odio lacus a ante Microservices ullamcorper euismod euismod sending to kafka topic twitter-topic
2023-03-05 01:08:34 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 1193441793105276144, "id": 3215158245404844974, "text": "ullamcorper odio lacus a ante Microservices ullamcorper euismod euismod", "createdAt": 1677965914000}' to topic = 'twitter-topic'
2023-03-05 01:08:42 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-05 01:08:44 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text quis non sed ante Elasticsearch at lacinia sending to kafka topic twitter-topic
2023-03-05 01:08:44 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 3955147962457179528, "id": 6084523712229303879, "text": "quis non sed ante Elasticsearch at lacinia", "createdAt": 1677965924000}' to topic = 'twitter-topic'
2023-03-05 01:08:54 [pool-3-thread-1] INFO  x.g.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text lacinia vestibulum feugiat feugiat at lacinia a Kafka a arcu ullamcorper euismod euismod a sending to kafka topic twitter-topic
2023-03-05 01:08:54 [pool-3-thread-1] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Sending message = '{"userId": 6014602652523031427, "id": 889569092120674532, "text": "lacinia vestibulum feugiat feugiat at lacinia a Kafka a arcu ullamcorper euismod euismod a", "createdAt": 1677965934000}' to topic = 'twitter-topic'
2023-03-05 01:09:00 [SpringApplicationShutdownHook] INFO  x.g.m.d.k.p.s.i.TwitterKafkaProducer - Closing kafka producer!
2023-03-05 01:09:00 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2023-03-05 01:09:00 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2023-03-05 01:09:00 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-05 01:09:00 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2023-03-05 01:09:00 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2023-03-05 01:09:00 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2023-03-05 01:09:00 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2023-03-05 01:09:00 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-05 01:09:00 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
